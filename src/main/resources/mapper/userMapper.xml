<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.example.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="md5_password" property="md5Password" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="cat_name" property="catName" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="sign_date" property="signDate" jdbcType="DATE" />
    <result column="valid_time" property="validTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, login_name, level, province, city, sign_date, valid_time,cat_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectUserSelective" resultMap="BaseResultMap" parameterType="com.example.entity.User" >
    select
    <include refid="Base_Column_List" />, datediff(SYSDATE(), sign_date)-valid_time isValid
    from user
    <include refid="dynamicWhere"/>
  </select>

  <sql id="dynamicWhere">
    <trim prefix="where" prefixOverrides="and|or">
        <if test="loginName!=null">
            AND login_name = #{loginName,jdbcType=VARCHAR}
        </if>
        <if test="md5Password!=null">
            AND md5_password = md5(#{md5Password,jdbcType=VARCHAR})
        </if>
        <if test="level!=null">
            AND level = #{level,jdbcType=INTEGER}
        </if>
        <if test="province!=null">
            AND province = #{province,jdbcType=VARCHAR}
        </if>
        <if test="city!=null">
            AND city = #{city,jdbcType=VARCHAR}
        </if>
    </trim>
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.entity.User" >
    insert into user (id, user_name, login_name, 
      md5_password, level, province, 
      city, sign_date, valid_time
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{md5Password,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{signDate,jdbcType=DATE}, #{validTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="md5Password != null" >
        md5_password,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="signDate != null" >
        sign_date,
      </if>
      <if test="validTime != null" >
        valid_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="md5Password != null" >
        #{md5Password,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null" >
        #{signDate,jdbcType=DATE},
      </if>
      <if test="validTime != null" >
        #{validTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="md5Password != null" >
        md5_password = #{md5Password,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null" >
        sign_date = #{signDate,jdbcType=DATE},
      </if>
      <if test="validTime != null" >
        valid_time = #{validTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      md5_password = #{md5Password,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      sign_date = #{signDate,jdbcType=DATE},
      valid_time = #{validTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>