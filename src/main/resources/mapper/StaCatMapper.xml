<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.StaCatMapper">
    <resultMap id="BaseResultMap" type="com.example.entity.StaCat">
        <result column="YEAR" property="year" jdbcType="VARCHAR"/>
        <result column="MONTH" property="month" jdbcType="VARCHAR"/>
        <result column="COUNTRY" property="country" jdbcType="VARCHAR"/>
        <result column="PROVINCE" property="province" jdbcType="VARCHAR"/>
        <result column="CITY" property="city" jdbcType="VARCHAR"/>
        <result column="DISTRICT" property="district" jdbcType="VARCHAR"/>
        <result column="PLATFORM" property="platform" jdbcType="VARCHAR"/>
        <result column="S_CAT1_NAME" property="sCat1Name" jdbcType="VARCHAR"/>
        <result column="CAT1_NAME" property="cat1Name" jdbcType="VARCHAR"/>
        <result column="CAT2_NAME" property="cat2Name" jdbcType="VARCHAR"/>
        <result column="CAT3_NAME" property="cat3Name" jdbcType="VARCHAR"/>
        <result column="P_COUNT" property="pCount" jdbcType="BIGINT"/>
        <result column="M_SLAES_COUNT" property="mSlaesCount" jdbcType="DOUBLE"/>
        <result column="M_SALES_VOLUME" property="mSalesVolume" jdbcType="DOUBLE"/>
        <result column="UNIT_TYPE" property="unitType" jdbcType="VARCHAR"/>
        <result column="TOTAL_SALES_VOLUME" property="totalSalesVolume" jdbcType="BIGINT"/>
        <result column="sales_volume" property="salesVolume" jdbcType="BIGINT"/>
        <result column="INSERT_TIME" property="insertTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_USER" property="updateUser" jdbcType="CHAR"/>
        <result column="STATUS" property="status" jdbcType="BIGINT"/>
        <result column="REMARK1" property="remark1" jdbcType="CHAR"/>
        <result column="REMARK2" property="remark2" jdbcType="CHAR"/>
        <result column="REMARK3" property="remark3" jdbcType="CHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.example.entity.StaCat" extends="BaseResultMap">
        <result column="DATE" property="date" jdbcType="LONGVARCHAR"/>
        <result column="salesPercent" property="salesPercent" jdbcType="VARCHAR"/>
        <result column="countPercent" property="countPercent" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    YEAR, MONTH, COUNTRY, PROVINCE, CITY, DISTRICT, PLATFORM, S_CAT1_NAME, CAT1_NAME,
    CAT2_NAME, CAT3_NAME, P_COUNT, M_SLAES_COUNT, M_SALES_VOLUME, UNIT_TYPE, TOTAL_SALES_VOLUME, 
    sales_volume, INSERT_TIME, UPDATE_TIME, UPDATE_USER, STATUS, REMARK1, REMARK2, REMARK3
  </sql>
    <sql id="Blob_Column_List">
    DATE
  </sql>
    <select id="selectAllWithPage" resultMap="ResultMapWithBLOBs" parameterType="com.example.entity.StaCat">
        select * from (
        select
        <include refid="Base_Column_List"/>
        ,
        m_sales_volume*100/(select sum(m_sales_volume) from tb_sta_cat t1 where t1.YEAR = t.year and t1.MONTH = t.MONTH
        and t1.PROVINCE = t.PROVINCE and t1.PLATFORM = t.PLATFORM and t1.S_CAT1_NAME = t.S_CAT1_NAME) salesPercent,
        M_SLAES_COUNT*100/(select sum(M_SLAES_COUNT) from tb_sta_cat t1 where t1.YEAR = t.year and t1.MONTH = t.MONTH
        and t1.PROVINCE = t.PROVINCE and t1.PLATFORM = t.PLATFORM and t1.S_CAT1_NAME = t.S_CAT1_NAME) countPercent
        from tb_sta_cat t
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        <if test="orderBy!=null">
            ORDER BY ${orderBy} desc
        </if>
        ) t2
        limit #{pageRow},#{pageSize}
    </select>

    <!--区域-品类分析,分页-->
    <select id="selectAreaCatWithPage" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        <!--select * from (-->
        <!--select-->
        <!--sum(M_SALES_VOLUME) totalVolume,-->
        <!--sum(M_SLAES_COUNT) totalCount,-->
        <!--PROVINCE,CITY,'整体' PLATFORM,S_CAT1_NAME sCat1Name-->
        <!--from tb_sta_cat t-->
        <!--where S_CAT1_NAME is not null and city is not null-->
        <!--<include refid="dynamicWhere"/>-->
        <!--group by PROVINCE,CITY,S_CAT1_NAME-->
        <!--ORDER BY totalVolume desc,totalCount desc-->
        <!--) t1-->

        <!--UNION-->

        <!--select * from (-->
        <!--select-->
        <!--sum(M_SALES_VOLUME) totalVolume,-->
        <!--sum(M_SLAES_COUNT) totalCount,-->
        <!--PROVINCE,CITY,PLATFORM,S_CAT1_NAME sCat1Name-->
        <!--from tb_sta_cat t-->
        <!--where S_CAT1_NAME is not null and city is not null-->
        <!--<include refid="dynamicWhere"/>-->
        <!--group by PROVINCE,CITY,PLATFORM,S_CAT1_NAME-->
        <!--ORDER BY totalVolume desc,totalCount desc-->
        <!--) t2-->
        <!--limit #{pageRow},#{pageSize}-->

        SELECT
        T1.PROVINCE,
        T1.CITY,
        T1.PLATFORM,
        T1.S_CAT1_NAME sCat1Name,
        FORMAT(T1.COUNT/T2.COUNT,2) countPercent,
        FORMAT(T1.VOLUME/T2.VOLUME,2) salesPercent
        FROM
        (
        SELECT
        '全部' AS PLATFORM,
        PROVINCE,
        CITY,
        S_CAT1_NAME,
        SUM(M_SLAES_COUNT) AS COUNT,
        SUM(M_SALES_VOLUME) AS VOLUME
        FROM tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY
        CITY,
        S_CAT1_NAME
        ) T1
        LEFT JOIN
        (
        SELECT
        '全部' AS PLATFORM,
        PROVINCE,
        CITY,
        SUM(M_SLAES_COUNT) AS COUNT,
        SUM(M_SALES_VOLUME) AS VOLUME
        FROM tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY
        CITY
        ) T2 ON T1.CITY = T2.CITY
        limit #{pageRow},#{pageSize}
    </select>

    <!--区域-品类分析，总销量-->
    <select id="selectCatVolumeTotal" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        select PROVINCE,city,PLATFORM,sum(M_SALES_VOLUME) totalVolume,
        sum(M_SLAES_COUNT) totalCount from tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY PROVINCE,city,PLATFORM
        UNION
        select PROVINCE,city,'整体' PLATFORM,sum(M_SALES_VOLUME) totalVolume,
        sum(M_SLAES_COUNT) totalCount from tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY PROVINCE,city
    </select>

    <!--品类分析-整体分析,总销量，总销售额-->
    <select id="selectCatWholeTotal" resultType="com.example.entity.StaCat"
            parameterType="com.example.entity.StaCat">
        SELECT
        sum(M_SALES_VOLUME) totalVolume,
        sum(M_SLAES_COUNT) totalCount,
        PROVINCE,PLATFORM
        from tb_sta_cat t
        where S_CAT1_NAME is not null
        <include refid="dynamicWhere"/>
        group by PROVINCE,PLATFORM

        UNION

        SELECT
        sum(M_SALES_VOLUME) totalVolume,
        sum(M_SLAES_COUNT) totalCount,
        PROVINCE,'全部' PLATFORM
        from tb_sta_cat t
        where S_CAT1_NAME is not null
        <include refid="dynamicWhere"/>
        group by PROVINCE
    </select>


    <!--品类分析-整体分析,分页-->
    <select id="selectCatWholeWithPage" resultType="com.example.entity.StaCat"
            parameterType="com.example.entity.StaCat">
        SELECT
		sum(M_SALES_VOLUME) totalVolume,
        sum(M_SLAES_COUNT) totalCount,
        PROVINCE,PLATFORM,S_CAT1_NAME sCat1Name
        from tb_sta_cat t
        where S_CAT1_NAME is not null
        <include refid="dynamicWhere"/>
        group by PROVINCE,PLATFORM,S_CAT1_NAME

        UNION

        SELECT
		sum(M_SALES_VOLUME) totalVolume,
        sum(M_SLAES_COUNT) totalCount,
        PROVINCE,'全部' PLATFORM,S_CAT1_NAME sCat1Name
        from tb_sta_cat t
        where S_CAT1_NAME is not null
        <include refid="dynamicWhere"/>
        group by PROVINCE,S_CAT1_NAME
        limit #{pageRow},#{pageSize}
    </select>

    <select id="selectCatWholeWithPageCount" resultType="java.lang.Integer" parameterType="com.example.entity.StaCat">
        select count(1) from (
            SELECT
            PROVINCE,PLATFORM,S_CAT1_NAME sCat1Name
            from tb_sta_cat t
            where S_CAT1_NAME is not null
            <include refid="dynamicWhere"/>
            group by PROVINCE,PLATFORM,S_CAT1_NAME

            UNION

            SELECT
            PROVINCE,'全部' PLATFORM,S_CAT1_NAME sCat1Name
            from tb_sta_cat t
            where S_CAT1_NAME is not null
            <include refid="dynamicWhere"/>
            group by PROVINCE,S_CAT1_NAME
        ) a
    </select>

    <!--品类分析-品类细分,分页-->
    <select id="selectCatDetailWithPage" resultType="com.example.entity.StaCat"
            parameterType="com.example.entity.StaCat">
        SELECT * from (
            select t.* from (
            select
            sum(M_SALES_VOLUME) totalVolume,
            PROVINCE,'整体' PLATFORM,S_CAT1_NAME sCat1Name,CAT1_NAME cat1Name,CAT2_NAME cat2Name
            from tb_sta_cat t
            where S_CAT1_NAME is not null <include refid="dynamicWhere"/>
            group by PROVINCE,S_CAT1_NAME,CAT1_NAME,CAT2_NAME )t
            ORDER BY t.totalVolume desc
        )t1
        union
        select * from (
            select t.* from (
            select
            sum(M_SALES_VOLUME) totalVolume,
            PROVINCE,PLATFORM,S_CAT1_NAME sCat1Name,CAT1_NAME cat1Name,CAT2_NAME cat2Name
            from tb_sta_cat t
            where S_CAT1_NAME is not null  <include refid="dynamicWhere"/>
            group by PROVINCE,PLATFORM,S_CAT1_NAME,CAT1_NAME,CAT2_NAME )t
            ORDER BY t.totalVolume desc
        )t2
        limit #{pageRow},#{pageSize}
    </select>

    <select id="selectCatDetailWithPageCount" resultType="java.lang.Integer" parameterType="com.example.entity.StaCat">
        select count(1) from (
		select CAT2_NAME
        from tb_sta_cat t
        where S_CAT1_NAME is not null <include refid="dynamicWhere"/>
        group by PROVINCE,PLATFORM,S_CAT1_NAME,CAT1_NAME,CAT2_NAME
        UNION
        select CAT2_NAME
        from tb_sta_cat t
        where S_CAT1_NAME is not null <include refid="dynamicWhere"/>
        group by PROVINCE,S_CAT1_NAME,CAT1_NAME,CAT2_NAME
        )t
    </select>

    <select id="selectTotalVolumeByPlatformList" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        select
        sum(M_SALES_VOLUME) totalVolume,
        PLATFORM
        from tb_sta_cat t
        <trim prefix="where" prefixOverrides="and | or">
          <include refid="dynamicWhere"/>
        </trim>
		GROUP BY PLATFORM
    </select>

    <select id="selectTotalVolumeList" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        select
        sum(M_SALES_VOLUME) totalVolume
        from tb_sta_cat t
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
    </select>

    <!--各品类区域销售占比分析,分页-->
    <select id="selectCatAreaWithPage" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        <!--select * from (-->
        <!--select t.* from (-->
                <!--select-->
                <!--sum(M_SALES_VOLUME) totalVolume,sum(M_SLAES_COUNT) totalCount,-->
                <!--PROVINCE,PLATFORM,S_CAT1_NAME sCat1Name,CITY-->
                <!--from tb_sta_cat t-->
                <!--where S_CAT1_NAME is not null-->
                <!--<include refid="dynamicWhere"/>-->
                <!--group by PROVINCE,PLATFORM,S_CAT1_NAME,CITY-->
        <!--)t order by t.totalVolume desc,t.totalCount desc)t1-->
        <!--UNION-->
        <!--select * from (-->
        <!--select t.* from (-->
                <!--select-->
                <!--sum(M_SALES_VOLUME) totalVolume,sum(M_SLAES_COUNT) totalCount,-->
                <!--PROVINCE,'整体' PLATFORM,S_CAT1_NAME sCat1Name,CITY-->
                <!--from tb_sta_cat t-->
                <!--where S_CAT1_NAME is not null-->
                <!--<include refid="dynamicWhere"/>-->
                <!--group by PROVINCE,S_CAT1_NAME,CITY-->
        <!--)t order by t.totalVolume desc,t.totalCount desc) t2-->

        SELECT
        T1.PLATFORM,
        T1.PROVINCE,
        T1.S_CAT1_NAME sCat1Name,
        T1.CITY,
        FORMAT(T1.COUNT/T2.COUNT*100,2) countPercent,
        FORMAT(T1.VOLUME/T2.VOLUME*100,2) salesPercent
        FROM
        (
        SELECT
        '全部' AS PLATFORM,
        PROVINCE,
        S_CAT1_NAME,
        CITY,
        SUM(M_SLAES_COUNT) AS COUNT,
        SUM(M_SALES_VOLUME) AS VOLUME
        FROM tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY
        S_CAT1_NAME,
        CITY
        ) T1
        LEFT JOIN
        (
        SELECT
        '全部' AS PLATFORM,
        PROVINCE,
        S_CAT1_NAME,
        SUM(M_SLAES_COUNT) AS COUNT,
        SUM(M_SALES_VOLUME) AS VOLUME
        FROM tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY
        S_CAT1_NAME
        ) T2 ON T1.S_CAT1_NAME = T2.S_CAT1_NAME
        limit #{pageRow},#{pageSize}
    </select>

    <select id="selectCatAreaWithPageCount" resultType="java.lang.Integer" parameterType="com.example.entity.StaCat">
        select count(1) from (
          SELECT
            T1.PLATFORM,
            T1.PROVINCE,
            T1.S_CAT1_NAME sCat1Name,
            T1.CITY
            FROM
            (
            SELECT
            '全部' AS PLATFORM,
            PROVINCE,
            S_CAT1_NAME,
            CITY
            FROM tb_sta_cat
            <trim prefix="where" prefixOverrides="and | or">
                <include refid="dynamicWhere"/>
            </trim>
            GROUP BY
            S_CAT1_NAME,
            CITY
            ) T1
            LEFT JOIN
            (
            SELECT
            '全部' AS PLATFORM,
            PROVINCE,
            S_CAT1_NAME
            FROM tb_sta_cat
            <trim prefix="where" prefixOverrides="and | or">
                <include refid="dynamicWhere"/>
            </trim>
            GROUP BY
            S_CAT1_NAME
            ) T2 ON T1.S_CAT1_NAME = T2.S_CAT1_NAME
        )t
    </select>

    <!--各品类区域销售占比分析,聚合销量-->
    <select id="selectCatAreaTotal" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        select
        sum(M_SALES_VOLUME) totalVolume,
        sum(M_SLAES_COUNT) totalCount,
        PROVINCE,PLATFORM,S_CAT1_NAME sCat1Name
        from tb_sta_cat t
        where S_CAT1_NAME is not null
        <include refid="dynamicWhere"/>
        group by PROVINCE,PLATFORM,S_CAT1_NAME
        UNION
        select
        sum(M_SALES_VOLUME) totalVolume,
        sum(M_SLAES_COUNT) totalCount,
        PROVINCE,'整体' PLATFORM,
        S_CAT1_NAME sCat1Name
        from tb_sta_cat t
        where S_CAT1_NAME is not null
        <include refid="dynamicWhere"/>
        group by PROVINCE,S_CAT1_NAME
    </select>

    <select id="selectAreaCatWithPageCount" resultType="java.lang.Integer" parameterType="com.example.entity.StaCat">
        select count(1) from (
        select 1 from tb_sta_cat t
        where S_CAT1_NAME is not null
        <include refid="dynamicWhere"/>
        group by PROVINCE,CITY,S_CAT1_NAME
        ) t
    </select>

    <!--区域-品类分析,柱形图-->
    <select id="selectAreaCatLine" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        <!--select sum(M_SALES_VOLUME)*100/(select sum(m_sales_volume) from tb_sta_cat-->
        <!--<trim prefix="where" prefixOverrides="and | or">-->
            <!--<include refid="dynamicWhere"/>-->
        <!--</trim>-->
        <!--) salesPercent,-->
        <!--sum(M_SLAES_COUNT)*100/(select sum(M_SLAES_COUNT) from tb_sta_cat-->
        <!--<trim prefix="where" prefixOverrides="and | or">-->
            <!--<include refid="dynamicWhere"/>-->
        <!--</trim>-->
        <!--) countPercent,-->
        <!--CITY,S_CAT1_NAME sCat1Name-->
        <!--from tb_sta_cat t-->
        <!--where S_CAT1_NAME is not null-->
        <!--<include refid="dynamicWhere"/>-->
        <!--group by CITY,S_CAT1_NAME-->
        <!--ORDER BY salesPercent,countPercent desc-->
        SELECT
        T1.CITY,
        T1.S_CAT1_NAME sCat1Name,
        FORMAT(T1.COUNT/T2.COUNT,2) countPercent,
        FORMAT(T1.VOLUME/T2.VOLUME,2) salesPercent
        FROM
        (
        SELECT
        '全部' AS PLATFORM,
        CITY,
        S_CAT1_NAME,
        SUM(M_SLAES_COUNT) AS COUNT,
        SUM(M_SALES_VOLUME) AS VOLUME
        FROM tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY
        CITY,
        S_CAT1_NAME
        ) T1
        LEFT JOIN
        (
        SELECT
        '全部' AS PLATFORM,
        CITY,
        SUM(M_SLAES_COUNT) AS COUNT,
        SUM(M_SALES_VOLUME) AS VOLUME
        FROM tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY
        CITY
        ) T2 ON T1.CITY = T2.CITY
    </select>

    <!--首页-网络零售热销品类TOP30-->
    <select id="selectHomeTop30" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        select * from (
        SELECT CAT2_NAME cat2Name,sum(M_SLAES_COUNT) totalCount,sum(M_SALES_VOLUME) totalVolume from tb_sta_cat where
        CAT1_NAME IS NOT NULL
        <include refid="dynamicWhere"/>
        GROUP BY CAT2_NAME ) t
        <if test="sortColumn!=null">
            ORDER BY ${sortColumn} ${sortType}
        </if>
        <if test="sortColumn==null">
            ORDER BY totalVolume desc
        </if>
        limit #{pageRow},#{pageSize}
    </select>

    <select id="selectPageCount" resultType="java.lang.Integer" parameterType="com.example.entity.StaCat">
        select count(1)
        from tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
    </select>

    <select id="selectList" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        <!--select t.city,t.S_CAT1_NAME sCat1Name,-->
        <!--sum(M_SLAES_COUNT)*100/(select sum(t1.M_SLAES_COUNT) from tb_sta_cat t1-->
        <!--<trim prefix="where" prefixOverrides="and | or">-->
            <!--<include refid="dynamicWhere"/>-->
        <!--</trim>-->
        <!--) countPercent,-->
        <!--sum(M_SALES_VOLUME)*100/(select sum(t2.M_SALES_VOLUME) from tb_sta_cat t2-->
        <!--<trim prefix="where" prefixOverrides="and | or">-->
            <!--<include refid="dynamicWhere"/>-->
        <!--</trim>-->
        <!--) salesPercent-->
        <!--from tb_sta_cat t-->
        <!--<trim prefix="where" prefixOverrides="and | or">-->
            <!--<include refid="dynamicWhere"/>-->
        <!--</trim>-->
        <!--GROUP BY t.CITY,t.S_CAT1_NAME-->

        SELECT
        T1.CITY,
        T1.S_CAT1_NAME sCat1Name,
        FORMAT(T1.COUNT/T2.COUNT,2) countPercent,
        FORMAT(T1.VOLUME/T2.VOLUME,2) salesPercent,
        T1.PLATFORM,
        T1.PROVINCE
        FROM
        (
        SELECT
        '全部' AS PLATFORM,
        PROVINCE,
        S_CAT1_NAME,
        CITY,
        SUM(M_SLAES_COUNT) AS COUNT,
        SUM(M_SALES_VOLUME) AS VOLUME
        FROM tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY
        S_CAT1_NAME,
        CITY
        ) T1
        LEFT JOIN
        (
        SELECT
        '全部' AS PLATFORM,
        PROVINCE,
        S_CAT1_NAME,
        SUM(M_SLAES_COUNT) AS COUNT,
        SUM(M_SALES_VOLUME) AS VOLUME
        FROM tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY
        S_CAT1_NAME
        ) T2 ON T1.S_CAT1_NAME = T2.S_CAT1_NAME
    </select>

    <!--首页-主要电商平台交易额走势-->
    <select id="selectBusinessLine" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        SELECT date dateStr,platform,sum(M_SALES_VOLUME) totalVolume from tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY date,platform
    </select>

    <select id="selectWholeList" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        select t.S_CAT1_NAME sCat1Name,
        sum(M_SLAES_COUNT) totalCount,
        sum(M_SALES_VOLUME) totalVolume
        from tb_sta_cat t
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY t.S_CAT1_NAME
    </select>

    <select id="selectSalesAndCountByProvince" resultType="com.example.entity.StaCat"
            parameterType="com.example.entity.StaCat">
        select sum(M_SLAES_COUNT) mSlaesCount, sum(M_SALES_VOLUME) mSalesVolume
        from tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY PROVINCE
    </select>

    <select id="selectListByParam" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        select
        s_cat1_name sCat1Name,cat1_name cat1Name,cat2_name cat2Name,cat3_name cat3Name,sum(M_SLAES_COUNT) mSlaesCount,(@i:=@i+1) id
        from tb_sta_cat t,(select @i:=0) as it
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY S_CAT1_NAME,CAT1_NAME,CAT2_NAME,CAT3_NAME
    </select>

    <select id="selectListGroupByPlatform" resultType="com.example.entity.StaCat" parameterType="com.example.entity.StaCat">
        select PLATFORM,
        s_cat1_name sCat1Name,cat1_name cat1Name,cat2_name cat2Name,cat3_name cat3Name,sum(M_SLAES_COUNT) mSlaesCount,(@i:=@i+1) id
        from tb_sta_cat t,(select @i:=0) as it
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
        GROUP BY PLATFORM,S_CAT1_NAME,CAT1_NAME,CAT2_NAME,CAT3_NAME
    </select>

    <sql id="dynamicWhere">
        and s_cat1_name is not null
        <if test="platform!=null">
            AND PLATFORM = #{platform,jdbcType=VARCHAR}
        </if>
        <if test="sCat1Name!=null">
            AND S_CAT1_NAME = #{sCat1Name,jdbcType=VARCHAR}
        </if>
        <if test="cat1Name!=null">
            AND CAT1_NAME = #{cat1Name,jdbcType=VARCHAR}
        </if>
        <if test="cat2Name!=null">
            AND CAT2_NAME = #{cat2Name,jdbcType=VARCHAR}
        </if>
        <if test="dateBegin!=null and dateEnd!=null">
            AND date between #{dateBegin,jdbcType=VARCHAR} and #{dateEnd,jdbcType=VARCHAR}
        </if>
        <if test="province!=null">
            AND PROVINCE = #{province,jdbcType=VARCHAR}
        </if>
        <if test="city!=null">
            AND CITY = #{city,jdbcType=VARCHAR}
        </if>
        <if test="remark1!=null">
            AND REMARK1 = #{remark1,jdbcType=VARCHAR}
        </if>
    </sql>

    <select id="selectCatNameListGroupByCat" resultType="com.example.entity.StaCat"
            parameterType="com.example.entity.StaCat">
        select DISTINCT ${name} name
        from tb_sta_cat
        <trim prefix="where" prefixOverrides="and | or">
            <include refid="dynamicWhere"/>
        </trim>
    </select>

    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tb_sta_cat
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_sta_cat
    where ID = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.entity.StaCat">
    insert into tb_sta_cat (ID, YEAR, MONTH, 
      COUNTRY, PROVINCE, CITY, 
      DISTRICT, PLATFORM, S_CAT1_NAME, 
      CAT1_NAME, CAT2_NAME, CAT3_NAME, 
      P_COUNT, M_SLAES_COUNT, M_SALES_VOLUME, 
      UNIT_TYPE, TOTAL_SALES_VOLUME, sales_volume, 
      INSERT_TIME, UPDATE_TIME, UPDATE_USER, 
      STATUS, REMARK1, REMARK2, 
      REMARK3, DATE)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=VARCHAR}, #{month,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{platform,jdbcType=VARCHAR}, #{sCat1Name,jdbcType=VARCHAR}, 
      #{cat1Name,jdbcType=VARCHAR}, #{cat2Name,jdbcType=VARCHAR}, #{cat3Name,jdbcType=VARCHAR}, 
      #{pCount,jdbcType=BIGINT}, #{mSlaesCount,jdbcType=DOUBLE}, #{mSalesVolume,jdbcType=DOUBLE}, 
      #{unitType,jdbcType=VARCHAR}, #{totalSalesVolume,jdbcType=BIGINT}, #{salesVolume,jdbcType=BIGINT}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=CHAR}, 
      #{status,jdbcType=BIGINT}, #{remark1,jdbcType=CHAR}, #{remark2,jdbcType=CHAR}, 
      #{remark3,jdbcType=CHAR}, #{date,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.example.entity.StaCat">
        insert into tb_sta_cat
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="year != null">
                YEAR,
            </if>
            <if test="month != null">
                MONTH,
            </if>
            <if test="country != null">
                COUNTRY,
            </if>
            <if test="province != null">
                PROVINCE,
            </if>
            <if test="city != null">
                CITY,
            </if>
            <if test="district != null">
                DISTRICT,
            </if>
            <if test="platform != null">
                PLATFORM,
            </if>
            <if test="sCat1Name != null">
                S_CAT1_NAME,
            </if>
            <if test="cat1Name != null">
                CAT1_NAME,
            </if>
            <if test="cat2Name != null">
                CAT2_NAME,
            </if>
            <if test="cat3Name != null">
                CAT3_NAME,
            </if>
            <if test="pCount != null">
                P_COUNT,
            </if>
            <if test="mSlaesCount != null">
                M_SLAES_COUNT,
            </if>
            <if test="mSalesVolume != null">
                M_SALES_VOLUME,
            </if>
            <if test="unitType != null">
                UNIT_TYPE,
            </if>
            <if test="totalSalesVolume != null">
                TOTAL_SALES_VOLUME,
            </if>
            <if test="salesVolume != null">
                sales_volume,
            </if>
            <if test="insertTime != null">
                INSERT_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
            <if test="updateUser != null">
                UPDATE_USER,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="remark1 != null">
                REMARK1,
            </if>
            <if test="remark2 != null">
                REMARK2,
            </if>
            <if test="remark3 != null">
                REMARK3,
            </if>
            <if test="date != null">
                DATE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="year != null">
                #{year,jdbcType=VARCHAR},
            </if>
            <if test="month != null">
                #{month,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                #{country,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                #{district,jdbcType=VARCHAR},
            </if>
            <if test="platform != null">
                #{platform,jdbcType=VARCHAR},
            </if>
            <if test="sCat1Name != null">
                #{sCat1Name,jdbcType=VARCHAR},
            </if>
            <if test="cat1Name != null">
                #{cat1Name,jdbcType=VARCHAR},
            </if>
            <if test="cat2Name != null">
                #{cat2Name,jdbcType=VARCHAR},
            </if>
            <if test="cat3Name != null">
                #{cat3Name,jdbcType=VARCHAR},
            </if>
            <if test="pCount != null">
                #{pCount,jdbcType=BIGINT},
            </if>
            <if test="mSlaesCount != null">
                #{mSlaesCount,jdbcType=DOUBLE},
            </if>
            <if test="mSalesVolume != null">
                #{mSalesVolume,jdbcType=DOUBLE},
            </if>
            <if test="unitType != null">
                #{unitType,jdbcType=VARCHAR},
            </if>
            <if test="totalSalesVolume != null">
                #{totalSalesVolume,jdbcType=BIGINT},
            </if>
            <if test="salesVolume != null">
                #{salesVolume,jdbcType=BIGINT},
            </if>
            <if test="insertTime != null">
                #{insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=CHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIGINT},
            </if>
            <if test="remark1 != null">
                #{remark1,jdbcType=CHAR},
            </if>
            <if test="remark2 != null">
                #{remark2,jdbcType=CHAR},
            </if>
            <if test="remark3 != null">
                #{remark3,jdbcType=CHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.StaCat">
        update tb_sta_cat
        <set>
            <if test="year != null">
                YEAR = #{year,jdbcType=VARCHAR},
            </if>
            <if test="month != null">
                MONTH = #{month,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                COUNTRY = #{country,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                PROVINCE = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                CITY = #{city,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                DISTRICT = #{district,jdbcType=VARCHAR},
            </if>
            <if test="platform != null">
                PLATFORM = #{platform,jdbcType=VARCHAR},
            </if>
            <if test="sCat1Name != null">
                S_CAT1_NAME = #{sCat1Name,jdbcType=VARCHAR},
            </if>
            <if test="cat1Name != null">
                CAT1_NAME = #{cat1Name,jdbcType=VARCHAR},
            </if>
            <if test="cat2Name != null">
                CAT2_NAME = #{cat2Name,jdbcType=VARCHAR},
            </if>
            <if test="cat3Name != null">
                CAT3_NAME = #{cat3Name,jdbcType=VARCHAR},
            </if>
            <if test="pCount != null">
                P_COUNT = #{pCount,jdbcType=BIGINT},
            </if>
            <if test="mSlaesCount != null">
                M_SLAES_COUNT = #{mSlaesCount,jdbcType=DOUBLE},
            </if>
            <if test="mSalesVolume != null">
                M_SALES_VOLUME = #{mSalesVolume,jdbcType=DOUBLE},
            </if>
            <if test="unitType != null">
                UNIT_TYPE = #{unitType,jdbcType=VARCHAR},
            </if>
            <if test="totalSalesVolume != null">
                TOTAL_SALES_VOLUME = #{totalSalesVolume,jdbcType=BIGINT},
            </if>
            <if test="salesVolume != null">
                sales_volume = #{salesVolume,jdbcType=BIGINT},
            </if>
            <if test="insertTime != null">
                INSERT_TIME = #{insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                UPDATE_USER = #{updateUser,jdbcType=CHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=BIGINT},
            </if>
            <if test="remark1 != null">
                REMARK1 = #{remark1,jdbcType=CHAR},
            </if>
            <if test="remark2 != null">
                REMARK2 = #{remark2,jdbcType=CHAR},
            </if>
            <if test="remark3 != null">
                REMARK3 = #{remark3,jdbcType=CHAR},
            </if>
            <if test="date != null">
                DATE = #{date,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.entity.StaCat">
    update tb_sta_cat
    set YEAR = #{year,jdbcType=VARCHAR},
      MONTH = #{month,jdbcType=VARCHAR},
      COUNTRY = #{country,jdbcType=VARCHAR},
      PROVINCE = #{province,jdbcType=VARCHAR},
      CITY = #{city,jdbcType=VARCHAR},
      DISTRICT = #{district,jdbcType=VARCHAR},
      PLATFORM = #{platform,jdbcType=VARCHAR},
      S_CAT1_NAME = #{sCat1Name,jdbcType=VARCHAR},
      CAT1_NAME = #{cat1Name,jdbcType=VARCHAR},
      CAT2_NAME = #{cat2Name,jdbcType=VARCHAR},
      CAT3_NAME = #{cat3Name,jdbcType=VARCHAR},
      P_COUNT = #{pCount,jdbcType=BIGINT},
      M_SLAES_COUNT = #{mSlaesCount,jdbcType=DOUBLE},
      M_SALES_VOLUME = #{mSalesVolume,jdbcType=DOUBLE},
      UNIT_TYPE = #{unitType,jdbcType=VARCHAR},
      TOTAL_SALES_VOLUME = #{totalSalesVolume,jdbcType=BIGINT},
      sales_volume = #{salesVolume,jdbcType=BIGINT},
      INSERT_TIME = #{insertTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=CHAR},
      STATUS = #{status,jdbcType=BIGINT},
      REMARK1 = #{remark1,jdbcType=CHAR},
      REMARK2 = #{remark2,jdbcType=CHAR},
      REMARK3 = #{remark3,jdbcType=CHAR},
      DATE = #{date,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.example.entity.StaCat">
    update tb_sta_cat
    set YEAR = #{year,jdbcType=VARCHAR},
      MONTH = #{month,jdbcType=VARCHAR},
      COUNTRY = #{country,jdbcType=VARCHAR},
      PROVINCE = #{province,jdbcType=VARCHAR},
      CITY = #{city,jdbcType=VARCHAR},
      DISTRICT = #{district,jdbcType=VARCHAR},
      PLATFORM = #{platform,jdbcType=VARCHAR},
      S_CAT1_NAME = #{sCat1Name,jdbcType=VARCHAR},
      CAT1_NAME = #{cat1Name,jdbcType=VARCHAR},
      CAT2_NAME = #{cat2Name,jdbcType=VARCHAR},
      CAT3_NAME = #{cat3Name,jdbcType=VARCHAR},
      P_COUNT = #{pCount,jdbcType=BIGINT},
      M_SLAES_COUNT = #{mSlaesCount,jdbcType=DOUBLE},
      M_SALES_VOLUME = #{mSalesVolume,jdbcType=DOUBLE},
      UNIT_TYPE = #{unitType,jdbcType=VARCHAR},
      TOTAL_SALES_VOLUME = #{totalSalesVolume,jdbcType=BIGINT},
      sales_volume = #{salesVolume,jdbcType=BIGINT},
      INSERT_TIME = #{insertTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=CHAR},
      STATUS = #{status,jdbcType=BIGINT},
      REMARK1 = #{remark1,jdbcType=CHAR},
      REMARK2 = #{remark2,jdbcType=CHAR},
      REMARK3 = #{remark3,jdbcType=CHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>